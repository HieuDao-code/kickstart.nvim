{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Setup","text":"<p>Inspired by https://github.com/nvim-lua/kickstart.nvim.</p>"},{"location":"#installation","title":"Installation","text":"<ol> <li>Install Neovim&gt;=0.11 (native LSP setup).</li> <li>Install the external dependencies.</li> </ol>"},{"location":"#linux-install","title":"Linux Install","text":"Ubuntu Install Steps <pre><code>sudo add-apt-repository ppa:neovim-ppa/unstable -y\nsudo apt update\nsudo apt install make gcc ripgrep unzip git xclip neovim\n</code></pre> <ol> <li>Clone this Git repository by replacing <code>&lt;REPO&gt;</code> with <code>&lt;your_github_username&gt;</code> in the commands below (Linux and Mac):</li> </ol> <pre><code>git clone https://github.com/&lt;REPO&gt;/kickstart.nvim.git \"${XDG_CONFIG_HOME:-$HOME/.config}\"/nvim\n</code></pre>"},{"location":"#plugins","title":"Plugins","text":"<p>I use the plugin manager lazy.nvim to install all plugins. I also use mini.nvim and snacks.nvim, two collections of plugins for Neovim.</p> <p>\u2714\ufe0f: finished setup and documentation.</p> <p>\u274c: not setup properly and not documented.</p>"},{"location":"#working-on-text-and-code","title":"Working on text and code","text":"Name Purpose Dependencies Notes blink.nvim A completion plugin with support for LSPs and external sources \u2714\ufe0f conform.nvim Formatter plugin \u2714\ufe0f iron.nvim Interactive REPL (Read\u2013Eval\u2013Print Loop) \u274c mini.ai Extend and create\u00a0a/i\u00a0textobjects \u2714\ufe0f mini.move Move any selection in any direction \u2714\ufe0f mini.surround Fast and feature-rich surround actions \u2714\ufe0f nvim-autopairs Autocomplete autopairs, e.g. [],{},() etc. \u2714\ufe0f nvim-dap Debug Adapter Protocol client implementation \u274c nvim-treesitter Parser generator tool and incremental parsing library nvim-treesitter-context, nvim-treesitter-textobjects \u2714\ufe0f snacks.indent Adds indentation guides even on blank lines \u2714\ufe0f snacks.zen Zen mode, distraction-free coding \u2714\ufe0f todo-comments.nvim Highlight\u00a0your to-do comments in different styles nvim-lua/plenary.nvim \u2714\ufe0f vim-sleuth Smart indentation style detection \u2714\ufe0f"},{"location":"#working-with-files-and-navigating-between-files","title":"Working with files and navigating between files","text":"Name Purpose Dependencies Notes harpoon Auto updating and editable marks utility for fast file navigation nvim-lua/plenary.nvim \u2714\ufe0f oil.nvim File Explorer that lets you edit your filesystem like a normal Neovim buffer \u2714\ufe0f telescope.nvim Fuzzy finder nvim-lua/plenary.nvim, telescope-fzf-native.nvim, telescope-ui-select.nvim, external: ripgrep \u2714\ufe0f tmux Terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen \u274c"},{"location":"#git-integration","title":"Git Integration","text":"Name Purpose Dependencies Notes gitsigns.nvim Deep buffer integration for Git \u2714\ufe0f vim-fugitive Git plugin for Vim \u274c"},{"location":"#miscellaneous","title":"Miscellaneous","text":"Name Purpose Dependencies Notes fidget.nvim Extensible UI for Neovim notifications and LSP progress messages \u2714\ufe0f mini.icons File and folder icons \u2714\ufe0f mini.statusline Minimal and fast statusline module \u2714\ufe0f obsidian.nvim Plugin for Obsidian \u274c which-key.nvim Show available keybindings in a popup as you type \u2714\ufe0f"},{"location":"#language-server-protocol-debug-adapter-protocol-linter-and-formatter","title":"Language Server Protocol, Debug Adapter Protocol, Linter and Formatter","text":"<p>The LSP (Language Server Protocol), DAP (Debug Adapter Protocol), Linter and Formatter will be installed by the package manager Mason (with dependencies: nvim-lspconfig, mason-lspconfig.nvim, mason-tool-installer.nvim, mason-nvim-dap.nvim).</p> Name Language Purpose Notes debugpy Python DAP harper_ls English  Linter Grammar Checker lua_ls Lua LSP lazydev.nvim is a plugin that properly configures LuaLS. prettier JSON, Markdown, YAML Formatter pyright Python LSP Need to install Node.js because Pyright is written in Typescript. Ruff LSP will be an alternative to pyright soon. ruff Python LSP, Linter and Formatter stylua Lua Formatter taplo TOML LSP, Linter and Formatter yamlls YAML LSP"},{"location":"key_binding/","title":"Key bindings","text":"<ul> <li><code>&lt;CR&gt;</code> Enter</li> <li><code>&lt;M&gt;</code> Meta (Alt)</li> </ul>"},{"location":"key_binding/#information","title":"Information","text":"<ul> <li><code>&lt;space&gt;</code> leader key</li> <li><code>:checkhealth [&lt;pluginname&gt;]</code> check base or plugin status</li> <li><code>:checkhealth lsp</code> show details of LSP attached to buffer</li> <li><code>:Lazy</code> show package manager UI</li> <li><code>:Lazy profile</code> show startup time</li> <li><code>:Mason</code> show Mason UI</li> <li><code>:TSUpdate</code> update all Tree-sitter parsers</li> <li><code>:ConformInfo</code> autoformatter information</li> </ul>"},{"location":"key_binding/#working-on-text-and-code","title":"Working on text and code","text":""},{"location":"key_binding/#autocomplete","title":"Autocomplete","text":"<ul> <li><code>&lt;C-space&gt;</code> show autocompletion manually</li> <li><code>&lt;CR&gt;</code> select and accept</li> <li><code>&lt;C-p&gt;</code> select previous</li> <li><code>&lt;C-n&gt;</code> select next</li> <li><code>&lt;C-k&gt;</code> select signature</li> </ul>"},{"location":"key_binding/#autoformatter","title":"Autoformatter","text":"<ul> <li><code>&lt;leader&gt;f</code> format</li> </ul>"},{"location":"key_binding/#text-editing","title":"Text editing","text":""},{"location":"key_binding/#around-inside-textobject","title":"Around &amp; Inside textobject","text":"<ul> <li><code>a</code> around</li> <li><code>i</code> inside</li> <li><code>g[</code> goto start of <code>a</code> textobject</li> <li><code>g]</code> goto end of <code>a</code> textobject</li> </ul>"},{"location":"key_binding/#move-selection","title":"Move selection","text":"<p>Move selection in visual mode or current line</p> <ul> <li><code>&lt;M-h&gt;</code> left</li> <li><code>&lt;M-j&gt;</code> down</li> <li><code>&lt;M-k&gt;</code> up</li> <li><code>&lt;M-l&gt;</code> right</li> </ul>"},{"location":"key_binding/#surround","title":"Surround","text":"<ul> <li><code>ys{motion}{char}</code> add surrounding in Normal and Visual modes</li> <li><code>ds{char}</code> delete surrounding</li> <li> <p><code>cs{target}{replacement}</code> replace surrounding</p> </li> <li> <p><code>l</code> suffix to search with \"prev\" method</p> </li> <li><code>n</code> suffix to search with \"next\" method</li> </ul>"},{"location":"key_binding/#treesitter","title":"Treesitter","text":""},{"location":"key_binding/#incremental-selection","title":"Incremental selection","text":"<ul> <li><code>&lt;C-space&gt;</code> init selection</li> <li><code>&lt;C-space&gt;</code> node incremental</li> <li><code>bs</code> node decremental</li> </ul>"},{"location":"key_binding/#textobjects","title":"Textobjects","text":"<ul> <li><code>af</code> select outer part of a method/function definition</li> <li><code>if</code> select inner part of a method/function definition</li> <li><code>ac</code> select outer part of a class</li> <li><code>ic</code> select inner part of a class</li> </ul>"},{"location":"key_binding/#swap-with-next-object","title":"Swap with next object","text":"<ul> <li><code>&lt;leader&gt;na</code> swap parameter/argument with next</li> <li><code>&lt;leader&gt;pa</code> swap parameter/argument with next</li> <li><code>&lt;leader&gt;nm</code> swap function with next</li> <li><code>&lt;leader&gt;pm</code> swap function with next</li> </ul>"},{"location":"key_binding/#move","title":"Move","text":"<ul> <li><code>]f</code> next method/function def start</li> <li><code>]F</code> next method/function def end</li> <li><code>]c</code> next class start</li> <li><code>]C</code> next class end</li> <li><code>]a</code> next parameter/arguement start</li> <li> <p><code>]A</code> next parameter/arguement end</p> </li> <li> <p><code>[f</code> prev method/function def start</p> </li> <li><code>[F</code> prev method/function def end</li> <li> <p><code>[c</code> prev class start</p> </li> <li> <p><code>[a</code> prev parameter/arguement start</p> </li> <li><code>[A</code> prev parameter/arguement end</li> </ul>"},{"location":"key_binding/#zen-mode","title":"Zen mode","text":"<ul> <li><code>&lt;leader&gt;z</code> toggle zen mode</li> <li><code>&lt;leader&gt;Z</code> toggle zoom</li> </ul>"},{"location":"key_binding/#to-do-comments","title":"To-do comments","text":"<ul> <li><code>]t</code> move to next to-do comments</li> <li><code>[t</code> move to previous to-do comments</li> </ul>"},{"location":"key_binding/#language-server-protocol","title":"Language Server Protocol","text":"<ul> <li><code>grn</code> rename variable</li> <li><code>gra</code> go to code action</li> <li><code>grr</code> go to references</li> <li><code>gri</code> go to implementation</li> <li><code>grd</code> go to definition</li> <li><code>grD</code> go to declaration</li> <li><code>grt</code> go to type definition</li> <li><code>g0</code> open document symbols</li> <li><code>gW</code> open workspace symbols</li> <li><code>&lt;leader&gt;th</code> toggle inlay hints</li> </ul>"},{"location":"key_binding/#diagnostics","title":"Diagnostics","text":"<ul> <li><code>&lt;leader&gt;q</code> open diagnostic quickfix list</li> <li><code>]d</code> move next diagnostics in the current buffer</li> <li><code>[d</code> move previous diagnostics in the current buffer</li> </ul>"},{"location":"key_binding/#working-with-files-and-navigating-between-files","title":"Working with files and navigating between files","text":""},{"location":"key_binding/#harpoon","title":"Harpoon","text":"<ul> <li><code>&lt;leader&gt;a</code> attach harpoon to file</li> <li><code>&lt;leader&gt;e</code> open harpoon quick menu</li> <li><code>1</code>,<code>2</code>,<code>3</code>,<code>4</code>,<code>5</code> open harpoon file</li> </ul>"},{"location":"key_binding/#oil","title":"Oil","text":"<ul> <li><code>-</code> open parent directory</li> </ul>"},{"location":"key_binding/#telescope","title":"Telescope","text":"<ul> <li><code>&lt;leader&gt;sh</code> search help</li> <li><code>&lt;leader&gt;sk</code> search keymaps</li> <li><code>&lt;leader&gt;sf</code> search files</li> <li><code>&lt;leader&gt;ss</code> search select telescope</li> <li><code>&lt;leader&gt;sw</code> search current word</li> <li><code>&lt;leader&gt;sg</code> search by grep</li> <li><code>&lt;leader&gt;sd</code> search diagnostics</li> <li><code>&lt;leader&gt;sr</code> search resume</li> <li><code>&lt;leader&gt;s.</code> search recent files (\".\" for repeat)</li> <li><code>&lt;leader&gt;sb</code> search existing buffers</li> <li><code>&lt;leader&gt;/</code> fuzzily search in current buffer</li> <li><code>&lt;leader&gt;s/</code> search in open files</li> <li><code>&lt;leader&gt;sn</code> search neovim files</li> </ul>"},{"location":"key_binding/#tmux","title":"Tmux","text":""},{"location":"key_binding/#git-integration","title":"Git Integration","text":""},{"location":"key_binding/#gitsigns","title":"Gitsigns","text":""},{"location":"key_binding/#navigation","title":"Navigation","text":"<ul> <li><code>]c</code> jump to next git change</li> <li><code>]c</code> jump to previous git change</li> </ul>"},{"location":"key_binding/#visual-mode","title":"Visual mode","text":"<ul> <li><code>&lt;leader&gt;hs</code> git stage hunk</li> <li><code>&lt;leader&gt;hr</code> git reset hunk</li> </ul>"},{"location":"key_binding/#normal-mode","title":"Normal mode","text":"<ul> <li><code>&lt;leader&gt;hs</code> git stage hunk</li> <li><code>&lt;leader&gt;hr</code> git reset hunk</li> <li><code>&lt;leader&gt;hu</code> git undo stage hunk</li> <li><code>&lt;leader&gt;hp</code> git preview hunk</li> <li><code>&lt;leader&gt;hS</code> git stage buffer</li> <li><code>&lt;leader&gt;hR</code> git reset buffer</li> <li><code>&lt;leader&gt;hb</code> git blame</li> <li><code>&lt;leader&gt;hd</code> git diff against index</li> <li><code>&lt;leader&gt;hD</code> git diff against last commit</li> </ul>"},{"location":"key_binding/#toggles","title":"Toggles","text":"<ul> <li><code>&lt;leader&gt;tb</code> toggle git show blame line</li> <li><code>&lt;leader&gt;tD</code> toggle git show deleted</li> </ul>"},{"location":"key_binding/#fugitive","title":"Fugitive","text":""},{"location":"key_binding/#miscellaneous","title":"Miscellaneous","text":""},{"location":"key_binding/#obsidian","title":"Obsidian","text":""}]}